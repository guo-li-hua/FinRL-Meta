# 公众号读取消费记录
wx_consume_rec:
  SELECT C.*,  E.score,  E.id as evaluate_id,E.reply_content,E.reply_operator, datediff(NOW(), C.create_time)>7 AS expire
  FROM consume_union C
  LEFT JOIN evaluate E ON C.id = E.parent_id
  WHERE C.account_id = :account_id
  ORDER BY C.create_time DESC

# 指定时间段站点会员加油次数，金额汇总
month_customer_fuel_sum:
  SELECT A.id, C.times, C.caiyou, C.lng, C.all_fuel, A.level_id as old_level FROM customer_account A
  LEFT JOIN
  (SELECT account_id, count(*) as times, SUM(IF(fuel_type='0',pay_amount,0)) as caiyou,
  SUM(pay_amount) as all_fuel, SUM(IF(fuel_type='LNG',pay_amount,0)) as lng
  FROM fuel_fill_record WHERE create_time >= :begin AND create_time < :end
  GROUP BY account_id) C
  ON A.id=C.account_id
  WHERE A.level_type='auto' AND A.station_id=:station_id

# 统计跨站使用积分
cross_use_point_sum:
  SELECT U.use_station_name AS '加油站', sum(U.amount) AS '使用积分'
  FROM point_use_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.use_station_id <> C.station_id AND U.create_time>=:begin AND U.create_time<:end
  GROUP BY U.use_station_id

# 统计跨站被使用积分
cross_used_point_sum:
  SELECT C.station_name AS '加油站', -sum(U.amount) AS '被使用积分'
  FROM point_use_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.use_station_id <> C.station_id AND U.create_time>=:begin AND U.create_time<:end
  GROUP BY C.station_id

# 统计跨站发放积分
cross_issue_point_sum:
  SELECT U.issue_station_name AS '加油站', -sum(U.amount) AS '发放积分'
  FROM point_issue_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.issue_station_id <> C.station_id AND U.create_time>=:begin AND U.create_time<:end
  GROUP BY U.issue_station_id

# 统计跨站接收积分
cross_income_point_sum:
  SELECT C.station_name AS '加油站', sum(U.amount) AS '接收积分'
  FROM point_issue_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.issue_station_id <> C.station_id AND U.create_time>=:begin AND U.create_time<:end
  GROUP BY C.station_id

# 员工评价、加油工作量统计（KPI指标I）
staff_evaluate_sum:
  SELECT operator AS '员工',
  count( F.id ) AS '加油笔数',
  sum( total ) AS '加油总额',
  sum( pay_amount ) AS '实付金额',
  AVG( score ) * 2 AS '评价得分',
  count( score ) * 100 / count( F.id ) AS '评价率',
  sum( issue_point ) AS '发放积分'
  FROM fuel_fill_record F
  LEFT JOIN evaluate E ON F.id = E.parent_id
  WHERE F.create_time>=:begin AND F.create_time<:end AND F.station_id=:station_id
  GROUP BY F.operator_id

# 员工拉新统计（KPI指标II）
staff_customer_sum:
  SELECT S.`name` AS '员工', count(R.id) AS '拉新客数'
  FROM register_record R LEFT JOIN staff S ON R.invite_code = S.invite_code
  WHERE R.create_time>=:begin AND R.create_time<:end AND S.station_id = :station_id
  GROUP BY S.id

# 跨站积分使用、发放明细
cross_point_detail:
  SELECT U.create_time AS '时间', U.issue_station_name AS '对方加油站', U.amount AS '赠送积分', 0 AS '使用积分', U.issue_source AS '类别'
  FROM point_issue_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.issue_station_id <> C.station_id AND C.station_id=:station_id
  AND U.create_time>=:begin AND U.create_time<:end
  UNION
  SELECT U.create_time AS '时间', U.use_station_name AS '对方加油站', 0 AS '赠送积分', -U.amount AS '使用积分', U.use_type AS '类别'
  FROM point_use_record U
  INNER JOIN customer_base C ON U.base_id = C.id
  WHERE U.use_station_id <> C.station_id AND C.station_id=:station_id
  AND U.create_time>=:begin AND U.create_time<:end

#驾驶舱数据查询
station_statistic:
  SELECT  sum(total) AS total,  sum(pay_amount) AS pay_amount,  count(id) AS count_id,
  COUNT(DISTINCT base_cell) AS count_cell,  sum(ticket_amount) AS ticket_amount,
  sum(  CASE  WHEN fuel_type <> 0 THEN  total  END  ) /
  count(  CASE  WHEN fuel_type <> 0 THEN  1  END  ) AS qiyou_avg,
  sum(  CASE  WHEN fuel_type = 0 THEN  total  END  ) /
  count(  CASE  WHEN fuel_type = 0 THEN  1  END  ) AS caiyou_avg,
  sum( case when fuel_type =0 then total end)/sum(total)*100 as caiyou_per
  FROM
  fuel_fill_record
  WHERE (create_time between :start_time and :end_time) and (station_id = :station_id)

#查询新增注册用户数
new_customer:
  select count(id) as count_id from customer_account
  WHERE (create_time between :start_time and :end_time) and (station_id = :station_id)

#查询发放积分数
issue_point:
  select sum(amount) as sum from point_issue_record
  WHERE (create_time between :start_time and :end_time) and (issue_station_id = :station_id)

#查询使用积分数
use_point:
  select use_type,sum(amount) as sum from point_use_record
  WHERE (create_time between :start_time and :end_time) and (use_station_id = :station_id)
  group by use_type

#查询是否存在作弊嫌疑记录
count_recent_customer_by_staff:
  SELECT  count(id) AS count  FROM  fuel_fill_record  WHERE  (operator_id = :operator_id)
  and (create_time between :start_time and :end_time)  and (base_cell= :base_cell)

# 积分发送和消耗使用记录
point_issue_use:
  SELECT C.*
  FROM point_record as C
  WHERE C.base_id = :base_id
  ORDER BY C.create_time DESC

#查询作弊嫌疑记录
query_suspect_recordd:
  select * from fuel_fill_record where ((fuel_amount >=100) or (suspect_count >=2))
  and (suspect_flag =1)
  and   (create_time between :start_time and :end_time) and (station_id = :station_id)

# 车主top100记录
customer_top_one_hundred:
  SELECT
  SUM( F.total ) AS totals,SUM(F.pay_amount) AS pay,COUNT(*) AS count,
  C.`name` AS customer_name, C.`cell` AS customer_cell, C.plate AS customer_plate,
  C.point_amount AS points
  FROM
  fuel_fill_record AS F
  INNER JOIN customerview AS C ON F.base_cell = C.cell
  WHERE
  ( F.create_time BETWEEN :start_time AND :end_time ) AND (F.fuel_type IN :fuel_type)
  AND (F.station_id = :station_id)
  GROUP BY F.base_cell
  ORDER BY
  totals DESC
  LIMIT 0,100

#查询加油记录
query_fuel_fill_record:
  select * from fuel_fill_record where base_cell=:base_cell AND create_time>=:start_time AND create_time<:end_time order by create_time desc

#查询积分记录
query_point_record:
  select * from point_record where base_cell=:base_cell AND create_time>=:start_time AND create_time<:end_time order by create_time desc

#查询加油券
query_ticket_record:
  select *,ticket.create_time as create_time from ticket inner join customer_account on ticket.account = customer_account.account
  where cell=:base_cell and ticket_type=:ticket_type AND ticket.create_time>=:start_time AND ticket.create_time<:end_time order by ticket.create_time desc


#统计加油抵扣情况
deduction_sum:
  SELECT operator AS 姓名, '加油' AS 类型, SUM(total) AS 总金额, SUM(pay_amount) AS 实付金额, SUM(ticket_amount) AS 抵扣金额
  FROM fuel_fill_record
  WHERE station_id=:station_id AND create_time>=:start_time AND create_time<:end_time
  GROUP BY operator_id
  UNION
  SELECT operator AS 姓名, '便利店' AS 类型, SUM(total) AS 总金额, SUM(pay_amount) AS 实付金额, SUM(use_point) AS 抵扣金额
  FROM shop_record
  WHERE station_id=:station_id AND create_time>=:start_time AND create_time<:end_time
  GROUP BY operator_id
  UNION
  SELECT '' AS 姓名, '加油' AS 类型, 0 AS 总金额, 0 AS 实付金额, 0 AS 抵扣金额
  UNION
  SELECT '' AS 姓名, '便利店' AS 类型, 0 AS 总金额, 0 AS 实付金额, 0 AS 抵扣金额

carwash_statistics:
  SELECT ifnull(sum(use_ticket),0) as ticket_num,count(*) as count FROM merchant_record
  WHERE device_sn=:device_sn
  and (create_time between :start_time and :end_time) and (station_id = :station_id)

#便利店员工销售商品统计
shop_staff_goods_sum:
  SELECT operator AS 姓名, station_store_item_name AS 商品名称, count( * ) AS 数量, SUM( total ) AS 金额
  FROM shop_record_detail
  WHERE station_id = :station_id AND create_time >= :start_time AND create_time < :end_time
  GROUP BY operator_id, station_store_item_id

#站点三客油统计
3KU_station:
  SELECT DATE_FORMAT(create_time,:date_format) AS 年月, COUNT(*) AS 单数,COUNT(DISTINCT account_id) AS 来客数,
  SUM(total) AS 金额, SUM(IF(fuel_type='0',fuel_amount,0)) AS 柴油,
  SUM(IF(fuel_type<>'0',fuel_amount,0)) AS 汽油
  FROM fuel_fill_record
  WHERE station_id=:station_id AND create_time>=:start_time AND create_time<:end_time GROUP BY 年月;

#站点新客户数统计
new_customer_count:
  SELECT DATE_FORMAT(create_time,:date_format) AS 年月, COUNT(*) AS 新客数
  FROM customer_account WHERE station_id=:station_id AND create_time>:start_time AND create_time<:end_time GROUP BY 年月;

#各站便利店销售情况
overview_shop_sum:
  SELECT station_name AS 加油站, SUM(total) AS 总金额, SUM(pay_amount) AS 现金支付, SUM(use_point) AS 积分抵扣, SUM(ticket_amount) AS 卡券抵扣
  FROM shop_record
  WHERE create_time>=:start_time AND create_time<:end_time
  GROUP BY station_id

#各站便利店销售情况汇总
overview_shop_sum_agg:
  SELECT station_name AS 加油站, DATE_FORMAT(create_time,:time_format) AS 时间, SUM(total) AS 总金额,
  SUM(pay_amount) AS 现金支付, SUM(use_point) AS 积分抵扣, SUM(ticket_amount) AS 卡券抵扣
  FROM shop_record
  WHERE create_time>=:start_time AND create_time<:end_time
  GROUP BY station_id, 时间

#各站油积分发放情况
overview_issue_point:
  SELECT issue_station_name AS 加油站, SUM(amount) AS 发放积分
  FROM point_issue_record
  WHERE create_time>=:start_time AND create_time<:end_time
  GROUP BY issue_station_name

#各站油积分使用情况
overview_use_point:
  SELECT use_station_name AS 加油站, SUM(amount) AS 使用积分
  FROM point_use_record
  WHERE create_time>=:start_time AND create_time<:end_time
  GROUP BY use_station_name

#各站油油料销售情况
overview_fuel_sum:
  SELECT station_name AS 加油站, SUM(IF(fuel_type='0',fuel_amount,0)) AS 柴油,
  SUM(IF(fuel_type IN ('92','95','98'),fuel_amount,0)) AS 汽油,
  SUM(IF(fuel_type='lng',fuel_amount,0)) AS 天然气
  FROM fuel_fill_record
  WHERE create_time>=:start_time AND create_time<:end_time
  GROUP BY station_id


###############################定时任务使用#############################BEGIN
#发布定时图文信息
pub_material:
  UPDATE `material` SET `status`=1 WHERE NOW()-release_time>0 AND release_type=2 AND `status`=3

#更新客户等级
update_customer_level:
  UPDATE customer_account SET level_id=:level_id, level_name=:level_name, level_rate=:level_rate
  WHERE id=:id

#更新卡券过期
update_ticket_expire:
  UPDATE ticket SET status='过期' WHERE use_time IS NULL and end_time<NOW()

# 计算沉睡天数
calc_sleep_days:
  UPDATE customer_account CA INNER JOIN
  (SELECT customer_account.id, DATEDIFF(NOW(),max(fuel_fill_record.create_time)) AS DIFF
  FROM fuel_fill_record
  LEFT JOIN customer_account ON fuel_fill_record.account_id = customer_account.id
  GROUP BY customer_account.id) TMP ON CA.id = TMP.id
  SET CA.sleep_days=TMP.DIFF
###############################定时任务使用#############################END